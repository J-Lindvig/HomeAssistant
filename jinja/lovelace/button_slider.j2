{# @Author: Jacob Lindvig Henriksen (J-Lindvig) #}

{# VARS #}
{% set title = 'Lys' %}
{% set icon = 'mdi:lightbulb' %}
{% set panel = true %}
{% set layout = 'auto' %}
{% set page_cols = 4 %}
{% set main_group = 'group.alle_rum' %}
{% set card_cols = 3 %}
{% set indent = 4 %}
{% set dash = true %}

{# CONST - PRIVATE #}
{% set col_width = (100 - 1) / page_cols %}

{# PRIVATE BEGIN #}
{# BANNER IN YAML WITH SIGNATURE #}
{% set signature = "by J-Lindvig" %}
{% set stamp = "Created: " ~ now().day  ~ '/' ~ now().month ~ '/' ~ now().year %}
{% set banner = [
"      ____        __  __              ___          ___     __         ",
"     / __ )__  __/ /_/ /_____  ____  ( _ )   _____/ (_)___/ /__  _____",
"    / __  / / / / __/ __/ __ \/ __ \/ __ \/|/ ___/ / / __  / _ \/ ___/",
"   / /_/ / /_/ / /_/ /_/ /_/ / / / / /_/  <(__  ) / / /_/ /  __/ /    ",
"  /_____/\__,_/\__/\__/\____/_/ /_/\____/\/____/_/_/\__,_/\___/_/     ",
"                                                                      "
] %}

{%- macro print_banner() %}
{{ "#".ljust(80, "#") }}
{%- for line in banner %}
{%- if not loop.last %}
# {{ line.center(76) }} #
{%- else %}
# {{ (line[:-(signature | length)] ~ signature).center(76) }} #
{% endif -%}
{% endfor -%}
{{ "#".ljust(80, "#") }}
# {{ stamp.ljust(76," ") }} #
{{ "#".ljust(80, "#") }}
{%- endmacro %}
{# PRIVATE END #}

{%- macro buttons(ws, group) %}
{%- set len = state_attr(group, 'entity_id') | length -%}
{%- set gaps = (0 if (len % card_cols) | int==0 else card_cols - (len % card_cols) | int) %}
  {%- if not dash or indent < 1 %}
{{"  "*(ws)}}type: custom:stack-in-card
  {% else %}
{{"  "*(ws-1)}}- type: custom:stack-in-card
  {%- endif %}
{{"  "*ws}}title: "{{ state_attr(group, 'friendly_name') }}"
{{"  "*ws}}cards:
  {%- for entity in state_attr(group, 'entity_id') %}
    {%- if loop.index0 is divisibleby(card_cols) %}
{{"  "*ws}}  - type: custom:stack-in-card
{{"  "*ws}}    mode: horizontal
{{"  "*ws}}    cards:
    {%- endif %}
{{"  "*ws}}      - type: custom:stack-in-card
{{"  "*ws}}        cards:
{{"  "*ws}}          - type: custom:button-card
{{"  "*ws}}            entity: {{ entity }}
{{"  "*ws}}          - type: entities
{{"  "*ws}}            entities:
{{"  "*ws}}              - type: custom:slider-entity-row
{{"  "*ws}}                entity: {{ entity }}
{{"  "*ws}}                hide_state: true
{{"  "*ws}}                full_row: true
    {%- if loop.last and gaps > 0 %}
      {%- for i in range(0, gaps) %}
{{"  "*ws}}      - type: custom:button-card
{{"  "*ws}}        color_type: blank-card
      {%- endfor %}
    {% endif %}
  {%- endfor %}
{% endmacro -%}

{{ print_banner() }}

title: {{ title }}
icon: {{ icon }}
panel: {{ panel }}
cards:
  - type: custom:layout-card
    layout: auto
    column_num: {{ page_cols }}
    column_width: {{ (100 - 1) / page_cols }}%
    cards:
{%- for group in state_attr(main_group, 'entity_id') %}
  {{- buttons(indent, group) -}}
{% endfor %}
{{ "#".ljust(80, "#") }}
#### {{ "End of file".center(70) }} ####
{{ "#".ljust(80, "#") }}